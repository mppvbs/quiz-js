{"version":3,"sources":["App.js","index.js"],"names":["App","questions","questionText","answerOptions","answerText","isCorrect","useState","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","className","length","map","answerOption","onClick","nextQuestion","handleAnswerOptionClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.546486a8.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport default function App() {\n\tconst questions = [\n\t\t{\n\t\t\tquestionText: 'Qual é a capital da França?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Marselha', isCorrect: false },\n\t\t\t\t{ answerText: 'Nice', isCorrect: false },\n\t\t\t\t{ answerText: 'Paris', isCorrect: true },\n\t\t\t\t{ answerText: 'Lyon', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Qual é a capital da Escócia?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Edimburgo', isCorrect: false },\n\t\t\t\t{ answerText: 'Aberdeen', isCorrect: false },\n\t\t\t\t{ answerText: 'Dundee', isCorrect: false },\n\t\t\t\t{ answerText: 'Glasgow', isCorrect: true },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Qual é a capital da Suécia?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Estocolmo', isCorrect: true },\n\t\t\t\t{ answerText: 'Gotemburgo', isCorrect: false },\n\t\t\t\t{ answerText: 'Malmo', isCorrect: false },\n\t\t\t\t{ answerText: 'Uppsala', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Qual é a capital da Bulgária?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Ruse', isCorrect: false },\n\t\t\t\t{ answerText: 'Sofia', isCorrect: true },\n\t\t\t\t{ answerText: 'Plovdiv', isCorrect: false },\n\t\t\t\t{ answerText: 'Varna', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Qual é a capital da Finlândia?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '\tTurku', isCorrect: false },\n\t\t\t\t{ answerText: 'Tampere', isCorrect: false },\n\t\t\t\t{ answerText: '\tHelsinque', isCorrect: true },\n\t\t\t\t{ answerText: 'Oulu', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Qual é a capital da Albânia?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Tirana', isCorrect: true },\n\t\t\t\t{ answerText: 'Berat', isCorrect: false },\n\t\t\t\t{ answerText: 'Vlorë', isCorrect: false },\n\t\t\t\t{ answerText: 'Elbasani ', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Qual é a capital da Estônia?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Narva', isCorrect: false },\n\t\t\t\t{ answerText: 'Haapsalu', isCorrect: false },\n\t\t\t\t{ answerText: 'Tartu', isCorrect: false },\n\t\t\t\t{ answerText: 'Tallinn', isCorrect: true },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Qual é a capital da Andorra?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Escaldes-Engordany', isCorrect: false },\n\t\t\t\t{ answerText: 'Canillo', isCorrect: false },\n\t\t\t\t{ answerText: 'Encamp', isCorrect: false },\n\t\t\t\t{ answerText: 'Andorra la Vella', isCorrect: true },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Qual é a capital da República Tcheca?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Pilsen', isCorrect: false },\n\t\t\t\t{ answerText: 'Praga', isCorrect: true },\n\t\t\t\t{ answerText: 'Kutná Hora', isCorrect: false },\n\t\t\t\t{ answerText: 'Karlovy Vary', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Qual é a capital da Dinamarca?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Aarhus', isCorrect: false },\n\t\t\t\t{ answerText: 'Helsingor', isCorrect: false },\n\t\t\t\t{ answerText: 'Copenhagen', isCorrect: true },\n\t\t\t\t{ answerText: 'Billund', isCorrect: false },\n\t\t\t],\n\t\t}\n\t];\n\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n\tconst [score, setScore] = useState(0);\n\n\tconst handleAnswerOptionClick = (isCorrect) => {\n\t\tif (isCorrect) {\n\t\t\tsetScore(score + 1);\n\t\t}\n\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\tsetShowScore(true);\n\t\t}\n\t};\n\treturn (\n\t\t<div className='app'>\n\t\t\t{showScore ? (\n\t\t\t\t<div className='score-section'>\n\t\t\t\t\tVocê acertou {score}/{questions.length}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Pergunta {currentQuestion + 1}</span>/{questions.length}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}